generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id String @id @default(cuid())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  email             String
  hashedPassword    String
<<<<<<< HEAD
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
=======
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
>>>>>>> dev

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
<<<<<<< HEAD
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
=======
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
>>>>>>> dev
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Projects {
  created_date             Int
  department               String
  description              String
  project_id               Int          @id
  departmentsDepartment_id String?
  Departments              Departments? @relation(fields: [departmentsDepartment_id], references: [department_id])
}

model Departments {
  department_id String          @id
  roles         String[]
  announcements Announcements[]
  projects      Projects[]
}

model Announcements {
  announcement_id          Int          @id
  content                  String
  created_by               String
  image                    String
  title                    String
  updated_date             Int
  uploaded_date            Int
  departmentsDepartment_id String?
  Departments              Departments? @relation(fields: [departmentsDepartment_id], references: [department_id])
}

model User {
<<<<<<< HEAD
  attendance     Int       @default(0)
=======
  attendance     Int        @default(0)
>>>>>>> dev
  batch          String
  major          String?
  department     String
  discord        String
  gender         String
  faculty        String
  hashedPassword String
  hobbies        String
  id             String    @id @unique
  level          String
  image          String?
  name           String
<<<<<<< HEAD
=======
  email          String    @unique
>>>>>>> dev
  emailVerified  DateTime?
  personal_email String
  roles          String
  telegram       String
  wallet         String?
  year           String
<<<<<<< HEAD
  email          String    @unique
  hashedPassword String
  id             String    @id @unique
  major          String?
  total_events   Int       @default(0)
=======
  total_events   Int        @default(0)
>>>>>>> dev
  Account        Account[]
  Session        Session[]
}
